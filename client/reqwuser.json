{ _readableState:
{ objectMode: false,
  highWaterMark: 16384,
  buffer: [],
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: true,
  endEmitted: true,
  reading: false,
  sync: true,
  needReadable: false,
  emittedReadable: false,
  readableListening: false,
  defaultEncoding: 'utf8',
  ranOut: false,
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null,
  resumeScheduled: false },
  readable: false,
  domain: null,
  _events: {},
  _maxListeners: undefined,
  socket:
  { _connecting: false,
    _hadError: false,
    _handle:
    { fd: 33,
      reading: true,
      owner: [Circular],
      onread: [Function: onread],
      onconnection: null,
      writeQueueSize: 0 },
    _parent: null,
    _host: null,
    _readableState:
    { objectMode: false,
      highWaterMark: 16384,
      buffer: [],
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      defaultEncoding: 'utf8',
      ranOut: false,
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      resumeScheduled: false },
    readable: true,
    domain: null,
    _events:
    { end: [Object],
      finish: [Function: onSocketFinish],
      _socketEnd: [Function: onSocketEnd],
      drain: [Object],
      timeout: [Function],
      error: [Function: socketOnError],
      close: [Object],
      data: [Function: socketOnData] },
    _maxListeners: undefined,
    _writableState:
    { objectMode: false,
      highWaterMark: 16384,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function],
      writecb: null,
      writelen: 0,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false },
    writable: true,
    allowHalfOpen: true,
    destroyed: false,
    bytesRead: 4562,
    _bytesDispatched: 1489,
    _pendingData: null,
    _pendingEncoding: '',
    server:
    { domain: null,
      _events: [Object],
      _maxListeners: undefined,
      _connections: 7,
      _handle: [Object],
      _usingSlaves: false,
      _slaves: [],
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      _connectionKey: '4:127.0.0.1:3000' },
    _idleTimeout: 120000,
    _idleNext:
    { _connecting: false,
      _hadError: false,
      _handle: [Object],
      _parent: null,
      _host: null,
      _readableState: [Object],
      readable: true,
      domain: null,
      _events: [Object],
      _maxListeners: undefined,
      _writableState: [Object],
      writable: true,
      allowHalfOpen: true,
      destroyed: false,
      bytesRead: 5149,
      _bytesDispatched: 1948,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Object],
      _idleTimeout: 120000,
      _idleNext: [Object],
      _idlePrev: [Circular],
      _idleStart: 294761270,
      parser: [Object],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage: null },
    _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
    _idleStart: 294762931,
    parser:
    { '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      maxHeaderPairs: 2000,
      onIncoming: [Function: parserOnIncoming] },
    _paused: false,
    read: [Function],
    _consuming: true,
    _httpMessage:
    { domain: null,
      _events: [Object],
      _maxListeners: undefined,
      output: [],
      outputEncodings: [],
      outputCallbacks: [],
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedHeader: {},
      _hasBody: true,
      _trailer: '',
      finished: false,
      _hangupClose: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _headers: [Object],
      _headerNames: [Object],
      req: [Circular],
      locals: {},
      writeHead: [Function: writeHead],
      end: [Function: end] },
    _peername: { address: '127.0.0.1', family: 'IPv4', port: 53438 } },
  connection:
  { _connecting: false,
    _hadError: false,
    _handle:
    { fd: 33,
      reading: true,
      owner: [Circular],
      onread: [Function: onread],
      onconnection: null,
      writeQueueSize: 0 },
    _parent: null,
    _host: null,
    _readableState:
    { objectMode: false,
      highWaterMark: 16384,
      buffer: [],
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      defaultEncoding: 'utf8',
      ranOut: false,
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      resumeScheduled: false },
    readable: true,
    domain: null,
    _events:
    { end: [Object],
      finish: [Function: onSocketFinish],
      _socketEnd: [Function: onSocketEnd],
      drain: [Object],
      timeout: [Function],
      error: [Function: socketOnError],
      close: [Object],
      data: [Function: socketOnData] },
    _maxListeners: undefined,
    _writableState:
    { objectMode: false,
      highWaterMark: 16384,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function],
      writecb: null,
      writelen: 0,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false },
    writable: true,
    allowHalfOpen: true,
    destroyed: false,
    bytesRead: 4562,
    _bytesDispatched: 1489,
    _pendingData: null,
    _pendingEncoding: '',
    server:
    { domain: null,
      _events: [Object],
      _maxListeners: undefined,
      _connections: 7,
      _handle: [Object],
      _usingSlaves: false,
      _slaves: [],
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      _connectionKey: '4:127.0.0.1:3000' },
    _idleTimeout: 120000,
    _idleNext:
    { _connecting: false,
      _hadError: false,
      _handle: [Object],
      _parent: null,
      _host: null,
      _readableState: [Object],
      readable: true,
      domain: null,
      _events: [Object],
      _maxListeners: undefined,
      _writableState: [Object],
      writable: true,
      allowHalfOpen: true,
      destroyed: false,
      bytesRead: 5149,
      _bytesDispatched: 1948,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Object],
      _idleTimeout: 120000,
      _idleNext: [Object],
      _idlePrev: [Circular],
      _idleStart: 294761270,
      parser: [Object],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage: null },
    _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
    _idleStart: 294762931,
    parser:
    { '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      maxHeaderPairs: 2000,
      onIncoming: [Function: parserOnIncoming] },
    _paused: false,
    read: [Function],
    _consuming: true,
    _httpMessage:
    { domain: null,
      _events: [Object],
      _maxListeners: undefined,
      output: [],
      outputEncodings: [],
      outputCallbacks: [],
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedHeader: {},
      _hasBody: true,
      _trailer: '',
      finished: false,
      _hangupClose: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _headers: [Object],
      _headerNames: [Object],
      req: [Circular],
      locals: {},
      writeHead: [Function: writeHead],
      end: [Function: end] },
    _peername: { address: '127.0.0.1', family: 'IPv4', port: 53438 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers:
  { host: 'localhost:3000',
    connection: 'keep-alive',
    'content-length': '37',
    'cache-control': 'max-age=0',
    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    origin: 'http://localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36',
    'content-type': 'application/x-www-form-urlencoded',
    referer: 'http://localhost:3000/',
    'accept-encoding': 'gzip, deflate',
    'accept-language': 'en-US,en;q=0.8',
    cookie: 'mongo-express=s%3A8bwGRSSzf5hJ14ewiAYgv3m0.XBNQ6WJHz%2B%2Bsm4Z6eI%2BfBJxDN1GeGFx8xTl%2BzLUwbeM; connect.sid=s%3AxUh-cBVrfUpUYVvyeWLV6Xqdgu0BBknP.cxR7ipZj2PphNxzWr0KbkiXgYl1W96zTmqtN4hkeCiU' },
  rawHeaders:
  [ 'Host',
    'localhost:3000',
    'Connection',
    'keep-alive',
    'Content-Length',
    '37',
    'Cache-Control',
    'max-age=0',
    'Accept',
    'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Origin',
    'http://localhost:3000',
    'User-Agent',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36',
    'Content-Type',
    'application/x-www-form-urlencoded',
    'Referer',
    'http://localhost:3000/',
    'Accept-Encoding',
    'gzip, deflate',
    'Accept-Language',
    'en-US,en;q=0.8',
    'Cookie',
    'mongo-express=s%3A8bwGRSSzf5hJ14ewiAYgv3m0.XBNQ6WJHz%2B%2Bsm4Z6eI%2BfBJxDN1GeGFx8xTl%2BzLUwbeM; connect.sid=s%3AxUh-cBVrfUpUYVvyeWLV6Xqdgu0BBknP.cxR7ipZj2PphNxzWr0KbkiXgYl1W96zTmqtN4hkeCiU' ],
  trailers: {},
  rawTrailers: [],
  _pendings: [],
  _pendingIndex: 0,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client:
  { _connecting: false,
    _hadError: false,
    _handle:
    { fd: 33,
      reading: true,
      owner: [Circular],
      onread: [Function: onread],
      onconnection: null,
      writeQueueSize: 0 },
    _parent: null,
    _host: null,
    _readableState:
    { objectMode: false,
      highWaterMark: 16384,
      buffer: [],
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      defaultEncoding: 'utf8',
      ranOut: false,
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      resumeScheduled: false },
    readable: true,
    domain: null,
    _events:
    { end: [Object],
      finish: [Function: onSocketFinish],
      _socketEnd: [Function: onSocketEnd],
      drain: [Object],
      timeout: [Function],
      error: [Function: socketOnError],
      close: [Object],
      data: [Function: socketOnData] },
    _maxListeners: undefined,
    _writableState:
    { objectMode: false,
      highWaterMark: 16384,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function],
      writecb: null,
      writelen: 0,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false },
    writable: true,
    allowHalfOpen: true,
    destroyed: false,
    bytesRead: 4562,
    _bytesDispatched: 1489,
    _pendingData: null,
    _pendingEncoding: '',
    server:
    { domain: null,
      _events: [Object],
      _maxListeners: undefined,
      _connections: 7,
      _handle: [Object],
      _usingSlaves: false,
      _slaves: [],
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      _connectionKey: '4:127.0.0.1:3000' },
    _idleTimeout: 120000,
    _idleNext:
    { _connecting: false,
      _hadError: false,
      _handle: [Object],
      _parent: null,
      _host: null,
      _readableState: [Object],
      readable: true,
      domain: null,
      _events: [Object],
      _maxListeners: undefined,
      _writableState: [Object],
      writable: true,
      allowHalfOpen: true,
      destroyed: false,
      bytesRead: 5149,
      _bytesDispatched: 1948,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Object],
      _idleTimeout: 120000,
      _idleNext: [Object],
      _idlePrev: [Circular],
      _idleStart: 294761270,
      parser: [Object],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage: null },
    _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
    _idleStart: 294762931,
    parser:
    { '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      maxHeaderPairs: 2000,
      onIncoming: [Function: parserOnIncoming] },
    _paused: false,
    read: [Function],
    _consuming: true,
    _httpMessage:
    { domain: null,
      _events: [Object],
      _maxListeners: undefined,
      output: [],
      outputEncodings: [],
      outputCallbacks: [],
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedHeader: {},
      _hasBody: true,
      _trailer: '',
      finished: false,
      _hangupClose: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _headers: [Object],
      _headerNames: [Object],
      req: [Circular],
      locals: {},
      writeHead: [Function: writeHead],
      end: [Function: end] },
    _peername: { address: '127.0.0.1', family: 'IPv4', port: 53438 } },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl:
  { protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/login',
    path: '/login',
    href: '/login',
    _raw: '/login' },
  params: {},
  query: {},
  res:
  { domain: null,
    _events: { prefinish: [Function: resOnFinish] },
    _maxListeners: undefined,
    output: [],
    outputEncodings: [],
    outputCallbacks: [],
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedHeader: {},
    _hasBody: true,
    _trailer: '',
    finished: false,
    _hangupClose: false,
    _headerSent: false,
    socket:
    { _connecting: false,
      _hadError: false,
      _handle: [Object],
      _parent: null,
      _host: null,
      _readableState: [Object],
      readable: true,
      domain: null,
      _events: [Object],
      _maxListeners: undefined,
      _writableState: [Object],
      writable: true,
      allowHalfOpen: true,
      destroyed: false,
      bytesRead: 4562,
      _bytesDispatched: 1489,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Object],
      _idleTimeout: 120000,
      _idleNext: [Object],
      _idlePrev: [Object],
      _idleStart: 294762931,
      parser: [Object],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage: [Circular],
      _peername: [Object] },
    connection:
    { _connecting: false,
      _hadError: false,
      _handle: [Object],
      _parent: null,
      _host: null,
      _readableState: [Object],
      readable: true,
      domain: null,
      _events: [Object],
      _maxListeners: undefined,
      _writableState: [Object],
      writable: true,
      allowHalfOpen: true,
      destroyed: false,
      bytesRead: 4562,
      _bytesDispatched: 1489,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Object],
      _idleTimeout: 120000,
      _idleNext: [Object],
      _idlePrev: [Object],
      _idleStart: 294762931,
      parser: [Object],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage: [Circular],
      _peername: [Object] },
    _header: null,
    _headers: { 'x-powered-by': 'Express' },
    _headerNames: { 'x-powered-by': 'X-Powered-By' },
    req: [Circular],
    locals: {},
    writeHead: [Function: writeHead],
    end: [Function: end] },
  body: { username: 'Merlandrew', password: 'password' },
  _body: true,
  read: [Function],
  _parsedOriginalUrl:
  { protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/login',
    path: '/login',
    href: '/login',
    _raw: '/login' },
  sessionStore:
  { sessions: { 'xUh-cBVrfUpUYVvyeWLV6Xqdgu0BBknP': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{}}' },
    generate: [Function],
    _events: { disconnect: [Function], connect: [Function] } },
  sessionID: 'xUh-cBVrfUpUYVvyeWLV6Xqdgu0BBknP',
  session:
  { cookie:
  { path: '/',
    _expires: null,
    originalMaxAge: null,
    httpOnly: true },
    passport: { user: 555c0ae54f850accb3ff208d } },
  _passport:
  { instance:
  { _key: 'passport',
    _strategies: [Object],
    _serializers: [Object],
    _deserializers: [Object],
    _infoTransformers: [],
    _framework: [Object],
    _userProperty: 'user',
    Authenticator: [Function: Authenticator],
    Passport: [Function: Authenticator],
    Strategy: [Object],
    strategies: [Object] },
    session: { user: 555c0ae54f850accb3ff208d } },
  route:
  { path: '/login',
    stack: [ [Object], [Object] ],
    methods: { post: true } },
  user:
  { _id: 555c0ae54f850accb3ff208d,
    name: 'Merlandrew',
    password: 'password' },
  authInfo: {} }